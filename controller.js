const { si9n } = require("node_modules/si9n-sdk/dist/si9n-sdk.min.js")

class Controller {
    init(model) {
        this.model = Controller.model;
    }
    model = Controller;

    static changeBrightness(brightnessLevel) {
        let brightness = [0x55, 0xAA, 0x00, 0x00, 0xFE, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x00, 0x00, 0x02, 0x01, 0x00, 0xAA, 0xFF, 0x5A];
        brightness[brightness.length - 3] = brightnessLevel;
        if (currentBrightnessValue > 170) {
            brightness[brightness.length - 2] = brightnessLevel + 85 - 256;
            brightness[brightness.length - 1] = 0x5B;
        } else {
            brightness[brightness.length - 2] = brightnessLevel + 85;
            brightness[brightness.length - 1] = 0x5A;
        }
        si9n.displayMessage({ raw: brightness });
    }

    static testPattern(pattern) {
        si9n.displayMessage({ raw: pattern });
    }
}

const Controller = {
    VX1000: "VX1000",
    VX6s: "VX6s",
    VX4s: "VX4s",
    novaProHD: "NovaProHD",
    novaProUHDJr: "NovaProUHDJr",
    mctrl4k: "MCTRL4K",
};

const Patterns = {
    Red: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x02, 0xDA, 0x58],
    Green: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x03, 0xDB, 0x58],
    Blue: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x04, 0xDC, 0x58],
    White: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x05, 0xDD, 0x58],
    Horizontal: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x06, 0xDE, 0x58],
    Vertical: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x07, 0xDF, 0x58],
    Diagonal: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x08, 0xE0, 0x58],
    GrayScale: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x09, 0xE1, 0x58],
    AgingAll: [0x55, 0xAA, 0x00, 0x80, 0xFE, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 0x02, 0x01, 0x00, 0x0A, 0xE2, 0x58]
};

const DisplayModes_VX6s = {

}